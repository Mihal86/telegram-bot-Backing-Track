import os
import asyncio
import psycopg2
from psycopg2 import OperationalError
from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    ContextTypes,
)

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
def connect_to_database():
    try:
        db_url = os.environ.get("DATABASE_URL")  # –ó—á–∏—Ç—É—î–º–æ –∑–º—ñ–Ω–Ω—É —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
        if not db_url:
            raise ValueError("‚ùå DATABASE_URL –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")
        conn = psycopg2.connect(db_url)
        print("‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö —É—Å–ø—ñ—à–Ω–æ!")
        conn.close()
    except (Exception, OperationalError) as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏: {e}")

# –°—Ç–∞—Ä—Ç–æ–≤–∞ –∫–æ–º–∞–Ω–¥–∞ –±–æ—Ç–∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤—ñ—Ç! –Ø –º—É–∑–∏—á–Ω–∏–π –±–æ—Ç ü§ñ")

# –ì–æ–ª–æ–≤–Ω–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
async def main():
    connect_to_database()

    TOKEN = os.environ.get("BOT_TOKEN")
    if not TOKEN:
        raise ValueError("‚ùå BOT_TOKEN –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")

    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))

    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ!")
    await app.run_polling()

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    asyncio.run(main())
