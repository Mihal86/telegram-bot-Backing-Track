import os
import psycopg2
import asyncio
from telegram import Update
from telegram.ext import Application, CommandHandler, CallbackContext

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
TOKEN = os.getenv("RAILWAY_TOKEN")
DATABASE_URL = os.getenv("DATABASE_URL")

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –∑–º—ñ–Ω–Ω–∏—Ö
if not TOKEN:
    raise ValueError("‚ùå RAILWAY_TOKEN –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")

if not DATABASE_URL:
    raise ValueError("‚ùå DATABASE_URL –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!")

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏
def check_postgres_connection():
    try:
        conn = psycopg2.connect(DATABASE_URL)
        conn.close()
        print("‚úÖ –£—Å–ø—ñ—à–Ω–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ PostgreSQL")
    except Exception as e:
        print("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –±–∞–∑–∏:", e)

# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start
async def start(update: Update, context: CallbackContext):
    await update.message.reply_text("–ü—Ä–∏–≤—ñ—Ç! –Ø —Ç–≤—ñ–π –±–æ—Ç!")

# –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
async def main():
    check_postgres_connection()

    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))

    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ...")
    await app.run_polling()

if __name__ == "__main__":
    asyncio.run(main())
